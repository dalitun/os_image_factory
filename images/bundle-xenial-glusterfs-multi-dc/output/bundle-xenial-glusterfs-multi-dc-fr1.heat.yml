#
##
### Written by the CAT (Cloudwatt Automation Team)
##
#
heat_template_version: 2013-05-23


description: All-in-one Glusterfs Multi Dc


parameters:
  keypair_name:
    description: Keypair to inject in instance
    label: SSH Keypair
    type: string

  flavor_name:
    default: n1.cw.standard-1
    description: Flavor to use for the deployed instance
    type: string
    label: Instance Type (Flavor)
    constraints:
      - allowed_values:
          - n1.cw.standard-1
          - n1.cw.standard-2
          - n1.cw.standard-4
          - n1.cw.standard-8
          - n1.cw.standard-12
          - n1.cw.standard-16

  slave_public_ip:
     type: string
     label: slave public ip


resources:
  network:
    type: OS::Neutron::Net

  subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: network }
      ip_version: 4
      cidr: 10.0.250.0/24
      allocation_pools:
        - { start: 10.0.250.100, end: 10.0.250.199 }

  security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - { direction: ingress, protocol: TCP }
        - { direction: ingress, protocol: UDP }
        - { direction: ingress, protocol: ICMP }
        - { direction: egress, protocol: ICMP }
        - { direction: egress, protocol: TCP }
        - { direction: egress, protocol: UDP }

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: 6ea98324-0f14-49f6-97c0-885d1b8dc517

  server:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: keypair_name }
      image: 2b38d117-25ed-4efd-8967-fa012ee866d1
      flavor: { get_param: flavor_name }
      name:
         str_replace:
            template: $stack-gluster-dc1
            params:
                $stack: { get_param: 'OS::stack_name' }
      networks:
        - network: { get_resource: network }
      security_groups:
        - { get_resource: security_group }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash
             echo "$slave_public_ip $stack-gluster-dc2 " >> /etc/hosts
             mkdir /etc/ansible
             cat << EOF >> /etc/ansible/vars.yml
                master: true
                hostname_slave: $stack-gluster-dc2
            EOF
             sudo export ANSIBLE_HOST_KEY_CHECKING=False
             sudo ansible-playbook /root/install.yml -e @/etc/ansible/vars.yml
          params:
            $slave_public_ip : { get_param: slave_public_ip }
            $stack: { get_param: 'OS::stack_name' }


  floating_ip_link:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: floating_ip }
      server_id: { get_resource: server }

outputs:
  floating_ip:
    description: IP address of the deployed compute instance
    value: { get_attr: [floating_ip, floating_ip_address] }